name: Create and publish Docker images

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  build-and-push-image:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - image: ghcr.io/tn8or/skodaimporter
            context-path: ./skodaimporter
          - image: ghcr.io/tn8or/skodachargefinder
            context-path: ./skodachargefinder
          - image: ghcr.io/tn8or/skodachargecollector
            context-path: ./skodachargecollector
          - image: ghcr.io/tn8or/skodaupdatechargeprices
            context-path: ./skodaupdatechargeprices
          - image: ghcr.io/tn8or/skodachargefrontend
            context-path: ./skodachargefrontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build and push Docker image
        if: github.actor != 'dependabot[bot]'
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: ${{ matrix.context-path }}
          file: ${{ matrix.context-path }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify-webhook:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Invoke deployment hook
        if: github.actor != 'dependabot[bot]'
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.WEBHOOK }}
          webhook_auth_type: none
          verbose: true
