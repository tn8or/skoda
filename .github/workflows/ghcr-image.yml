name: Create and publish Docker images

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

# Limit concurrent builds to reduce runner queue pressure
concurrency:
  group: image
  cancel-in-progress: false  # Don't cancel builds in progress

jobs:
  build-and-push-image:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: skoda-runner-set
    container:
      image: docker:27-dind
      options: --privileged
    timeout-minutes: 90  # Docker builds take 60-90 minutes according to docs
    permissions:
      contents: read
      packages: write
    strategy:
      # Limit concurrent builds for better batching
      max-parallel: 4
      matrix:
        include:
          - image: ghcr.io/tn8or/skodaimporter
            context-path: ./skodaimporter
          - image: ghcr.io/tn8or/skodachargefinder
            context-path: ./skodachargefinder
          - image: ghcr.io/tn8or/skodachargecollector
            context-path: ./skodachargecollector
          - image: ghcr.io/tn8or/skodaupdatechargeprices
            context-path: ./skodaupdatechargeprices
          - image: ghcr.io/tn8or/skodachargefrontend
            context-path: ./skodachargefrontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          # Security: Always checkout main branch, not potentially untrusted PR code
          # This ensures we build from trusted source even in workflow_run context
          ref: main
          fetch-depth: 0
          fetch-tags: true

      - name: Configure Docker daemon with registry proxy
        run: |
          # For Docker-in-Docker, configure daemon directly
          mkdir -p /etc/docker
          
          # Copy Docker daemon configuration with registry proxy settings
          cp .github/docker-daemon.json /etc/docker/daemon.json
          
          # Check if Docker daemon is already running, if not start it
          if ! docker info > /dev/null 2>&1; then
            echo "Starting Docker daemon..."
            dockerd-entrypoint.sh &
            
            # Wait for Docker daemon to be ready
            sleep 15
            
            # Wait for Docker socket to be available
            while ! docker info > /dev/null 2>&1; do
              echo "Waiting for Docker daemon to start..."
              sleep 5
            done
          fi
          
          # Verify Docker is running and show registry mirrors
          docker info

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          driver-opts: |
            env.BUILDKIT_STEP_LOG_MAX_SIZE=50000000

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Compute build args (commit, tag, date)
        id: buildargs
        shell: sh
        run: |
          echo "GIT_COMMIT=${GITHUB_SHA}" >> $GITHUB_ENV
          # Best-effort tag description; falls back to short SHA
          TAG=$(git describe --tags --always --dirty || echo)
          echo "GIT_TAG=${TAG}" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: github.actor != 'dependabot[bot]'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: ${{ matrix.context-path }}
          file: ${{ matrix.context-path }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_COMMIT=${{ env.GIT_COMMIT }}
            GIT_TAG=${{ env.GIT_TAG }}
            BUILD_DATE=${{ env.BUILD_DATE }}
          cache-from: |
            type=gha
          cache-to: |
            type=gha,mode=max

  notify-webhook:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: skoda-runner-set
    timeout-minutes: 5  # Webhook calls should be quick
    permissions: {}
    needs: build-and-push-image
    steps:
      - name: Invoke deployment hook
        if: github.actor != 'dependabot[bot]'
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.WEBHOOK }}
          webhook_auth_type: none
          verbose: true
